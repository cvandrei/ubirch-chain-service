include "application.base.conf"

# these environment variables have to be defined
# * SERVICE_IP
# ** IP adresse service should bind to, e.g. 127.0.0.1 or 0.0.0.0
# * SERVICE_PORT
# ** port which service should use, e.g. 8080
# * AKKA_ACTOR_TIMEOUT
# ** timeout of Akka Actors in seconds
# * AKKA_NUMBER_OF_WORKERS
# ** number of Akka Actor workers
# * GO_PIPELINE_NAME_CHAIN
# * GO_PIPELINE_LABEL_CHAIN
# * GO_REVISION_CHAIN
# * MONGO_USER
# ** user name required to access MongoDB
# * MONGO_PASSWORD
# ** password required to access MongoDB
# * MONGO_PORT
# ** MongoDB port
# * MONGO_OPTIONS
# ** MongoDB connection options
# * MONGO_HOST_1
# ** MongoDB url of host_1
# * MONGO_BIGCHAIN_USER
# ** user name required to access BigchainDb's MongoDB
# * MONGO_BIGCHAIN_PASSWORD
# ** password required to access BigchainDb's MongoDB
# * MONGO_BIGCHAIN_PORT
# ** BigchainDb's MongoDB port
# * MONGO_BIGCHAIN_OPTIONS
# ** BigchainDb's MongoDB connection options
# * MONGO_BIGCHAIN_HOST_1
# ** BigchainDb's MongoDB url of host_1
# * AWS_ACCESS_KEY_ID
# * AWS_SECRET_ACCESS_KEY
# * AWS_REGION
# * AWS_QUEUE_OWNER_ID
# * (optional) SQS_UBIRCH_CHAIN_MAX_MESSAGES_PER_POLL
# ** max messages per poll
# * SQS_UBIRCH_CHAIN_DEVICE_MSG_IN
# ** SQS queue name for incoming device messages (recommendation: ENVPREFIX_ubirch_chainservice_device_msg_in, e.g. demo_ubirch_chainservice_device_msg_in)
# * SQS_UBIRCH_CHAIN_DEVICE_HASH_IN
# ** SQS queue name for incoming device message hashes (recommendation: ENVPREFIX_ubirch_chainservice_device_msg_hash_in, e.g. demo_ubirch_chainservice_device_msg_hash_in)
# * SQS_UBIRCH_BIGCHAIN_DB_IN
# ** SQS queue name for incoming messages added to BigchainDb (recommendation: ENVPREFIX_ubirch_bigchaindb_in, e.g. demo_ubirch_bigchaindb_in)
# * (optional) ANCHORING_SCHEDULER_OFFSET_SECONDS
# * (optional) ANCHORING_INTERVAL_SECONDS
# * (optional) ANCHORING_ENABLED
# * (optional) UBIRCH_NOTARYSERVICE_URL

akka {
  loglevel = INFO
}

ubirchChainService {

  interface = ${SERVICE_IP}
  port = ${SERVICE_PORT}

  akka {
    actorTimeout = ${AKKA_ACTOR_TIMEOUT} // seconds
    numberOfWorkers = ${AKKA_NUMBER_OF_WORKERS}
  }

  aws {

    awsaccesskey = ${AWS_ACCESS_KEY_ID}
    awssecretaccesskey = ${AWS_SECRET_ACCESS_KEY}
    region = ${AWS_REGION}
    queueOwnerId = ${?AWS_QUEUE_OWNER_ID}

    sqs {

      maxMessagesPerPoll = ${?SQS_UBIRCH_CHAIN_MAX_MESSAGES_PER_POLL}

      queues {

        deviceDataIn = ${SQS_UBIRCH_CHAIN_DEVICE_MSG_IN}
        deviceDataHashIn = ${SQS_UBIRCH_CHAIN_DEVICE_HASH_IN}

        bigchainDbIn = ${SQS_UBIRCH_BIGCHAIN_DB_IN}

      }

    }

  }

  mongoBigchain {

    userPassword = ${MONGO_BIGCHAIN_USER}":"${MONGO_BIGCHAIN_PASSWORD}
    portAndOption = ${MONGO_BIGCHAIN_PORT}"/bigchain?"${MONGO_BIGCHAIN_OPTIONS}

    // for uri formats see: https://docs.mongodb.com/manual/reference/connection-string/
    host1 = "mongodb://"${ubirchChainService.mongoBigchain.userPassword}"@"${MONGO_BIGCHAIN_HOST_1}":"${ubirchChainService.mongoBigchain.portAndOption}

    hosts = ${ubirchChainService.mongoBigchain.host1}

  }

  mongoChainService {

    userPassword = ${MONGO_USER}":"${MONGO_PASSWORD}
    portAndOption = ${MONGO_PORT}"/chain-service?"${MONGO_OPTIONS}

    // for uri formats see: https://docs.mongodb.com/manual/reference/connection-string/
    host1 = "mongodb://"${ubirchChainService.mongoChainService.userPassword}"@"${MONGO_HOST_1}":"${ubirchChainService.mongoChainService.portAndOption}

    hosts = ${ubirchChainService.mongoChainService.host1}

  }

}

notaryService {
  client {
    url = ${?UBIRCH_NOTARYSERVICE_URL}
  }
}
